name: Pypi test
on:
  workflow_run:
    workflows:
      - Common lib pypi test release
    types:
      - completed
jobs:
  bump-version:
    strategy:
      max-parallel: 1 #not ideal, but ensures that we don't have commits blocking each other in main from this set of matrixed jobs
      matrix:
        os: [ubuntu-latest]
        python-version: [3.11.2]
        workspace:
          - ./
          - ./workspaces/chainbase
          - ./workspaces/hybrid_rerank_retrieval
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
            token: ${{ secrets.DEPLOY_TOKEN }}
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.5.1
      - name: Bump version
        id: bump_version
        run: |
          git pull
          cd ${{ matrix.workspace }}
          poetry version prerelease
          echo "NEW_VERSION=$(poetry version -s)" >> $GITHUB_OUTPUT
      - name: Bump installed common lib version
        if: matrix.workspace != './'
        run: |
          cd ${{ matrix.workspace }}
          poetry source add --priority=explicit testpypi https://test.pypi.org/simple/
          poetry add --source testpypi chainbase-lib@${{ steps.bump_version.outputs.NEW_VERSION }}
      - name: Commit version
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email '<>'
          git commit -am "[skip actions] Bumping to version ${{ steps.bump_version.outputs.NEW_VERSION }}"
          git push
  publish:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.11.2]
        workspace:
          - ./workspaces/chainbase
          - ./workspaces/hybrid_rerank_retrieval
    runs-on: ${{ matrix.os }}
    needs: bump-version
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.5.1
      - name: Build and publish to pypi test
        run: |
          git pull
          cd ${{ matrix.workspace }}
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi ${{ secrets.PYPI_TOKEN_TEST }}
          poetry build
          poetry publish -r testpypi


      # - name: Build and publish to pypi test
      #   uses: JRubics/poetry-publish@v1.17
      #   with:
      #     working-directory: ${{ matrix.workspace }}
      #     # package_directory: ${{ matrix.workspace }}
      #     python_version: "3.11.2"
      #     poetry_version: "==1.6.1" # (PIP version specifier syntax)
      #     pypi_token: ${{ secrets.PYPI_TOKEN_TEST }}
      #     repository_name: "testpypi"
      #     repository_url: "https://test.pypi.org/legacy/"
      #     allow_poetry_pre_release: "yes"
      #     ignore_dev_requirements: "yes"
